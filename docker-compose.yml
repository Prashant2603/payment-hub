version: '3.8'

services:
  payment-hub-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: payment-hub-1
    networks:
      - payment-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/paymenthub
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - INSTANCE_ID=instance-1
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
      - LOGBACK_INITIAL_RETRY_DELAY=30000  # Wait 30 seconds before first retry
      - LOGBACK_MAX_RETRY_DELAY=60000      # Max 60 seconds between retries
    depends_on:
      logstash:
        condition: service_healthy
      postgres:
        condition: service_started
        
  payment-hub-2:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: payment-hub-2
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/paymenthub
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - INSTANCE_ID=instance-2
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
      - LOGBACK_INITIAL_RETRY_DELAY=30000  # Wait 30 seconds before first retry
      - LOGBACK_MAX_RETRY_DELAY=60000      # Max 60 seconds between retries
    networks:
      - payment-network
    depends_on:
      logstash:
        condition: service_healthy
      postgres:
        condition: service_started

  payment-hub-3:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: payment-hub-3
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/paymenthub
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - INSTANCE_ID=instance-3
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
      - LOGBACK_INITIAL_RETRY_DELAY=30000  # Wait 30 seconds before first retry
      - LOGBACK_MAX_RETRY_DELAY=60000      # Max 60 seconds between retries
    networks:
      - payment-network
    depends_on:
      logstash:
        condition: service_healthy
      postgres:
        condition: service_started

  nginx:
    image: nginx:latest
    container_name: nginx-lb
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - payment-network
    depends_on:
      - payment-hub-1
      - payment-hub-2
      - payment-hub-3

  postgres:
    image: postgres:15
    container_name: postgres-dev
    environment:
      - POSTGRES_DB=paymenthub
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - payment-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    mem_limit: 512m

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch-dev
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    networks:
      - payment-network
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'" ]
      interval: 10s
      timeout: 10s
      retries: 20
    mem_limit: 1g

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    container_name: logstash-dev
    ports:
      - "5000:5000"
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    networks:
      - payment-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 30s
      timeout: 10s
      retries: 5
    
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana-dev
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - payment-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5601/api/status" ]
      interval: 10s
      timeout: 10s
      retries: 5
    mem_limit: 512m

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - payment-hub-1
      - payment-hub-2
      - payment-hub-3
    networks:
      - payment-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - payment-network

networks:
  payment-network:
    driver: bridge

volumes:
  elasticsearch_data:
  postgres_data:
  prometheus_data:
  grafana_data: